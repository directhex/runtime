<Project>
  <ItemGroup>
    <!-- Add a reference to Microsoft.DiaSymReader.Native if one does not already exist. -->
    <PackageReference Include="Microsoft.DiaSymReader.Native"
                      Exclude="@(PackageReference)"
                      Version="$(MicrosoftDiaSymReaderNativeVersion)"
                      IsImplicitlyDefined="true"
                      ExcludeAssets="all" />
    <!-- Generate the PkgMicrosoft_DiaSymReader_Native property no matter who added the reference. -->
    <PackageReference Update="Microsoft.DiaSymReader.Native"
                      GeneratePathProperty="true" />
  </ItemGroup>

  <PropertyGroup>
    <_hostArch>$(TargetArchitecture)</_hostArch>
    <_longNameTargetArch>$(TargetArchitecture)</_longNameTargetArch>
    <_hostArch Condition="'$(_hostArch)' == 'x64'">amd64</_hostArch>
    <_longNameTargetArch Condition="'$(_longNameTargetArch)' == 'x64'">amd64</_longNameTargetArch>
  </PropertyGroup>
  <PropertyGroup Condition="'$(TargetArchitecture)' == 'arm' AND '$(OS)' == 'Windows_NT'">
    <_hostArch>x86</_hostArch>
  </PropertyGroup>
  <PropertyGroup Condition="'$(TargetArchitecture)' == 'arm' AND '$(OS)' != 'Windows_NT'">
    <_hostArch>amd64</_hostArch>
  </PropertyGroup>
  <PropertyGroup Condition="'$(TargetArchitecture)' == 'arm64' AND '$(BuildArchitecture)' != 'arm64'">
    <_hostArch>amd64</_hostArch>
  </PropertyGroup>

  <Target Name="AddLongNameDacToPlatformManifest" DependsOnTargets="GetAssemblyVersion" BeforeTargets="GetFilesToPackage">
    <ItemGroup>
      <PlatformManifestFileEntry Include="mscordaccore_$(_hostArch)_$(_longNameTargetArch)_$(FileVersion).dll" />
    </ItemGroup>
  </Target>

  <Import Project="$([MSBuild]::GetPathOfFileAbove(Directory.Build.targets, $(MSBuildThisFileDirectory)..))" />

  <!-- TODO: The SDK imports this before it defines this target. We need to override this in the project file :-( -->
  <Target Name="ResolveReadyToRunCompilers" DependsOnTargets="ResolveRuntimeFilesFromLocalBuild">
    <PropertyGroup>
      <_diaSymArch Condition="'$(_hostArch)' != ''">$(_hostArch)</_diaSymArch>
      <_diaSymReaderPath>$(PkgMicrosoft_DiaSymReader_Native)/runtimes/win/native/Microsoft.DiaSymReader.Native.$(_diaSymArch).dll</_diaSymReaderPath>
      <_diaSymReaderPathIfExists Condition="Exists('$(_diaSymReaderPath)')">$(_diaSymReaderPath)</_diaSymReaderPathIfExists>
    </PropertyGroup>

    <ItemGroup Condition="'$(RuntimeFlavor)' != 'Mono'">
      <_crossTargetJit Include="@(CoreCLRCrossTargetFiles)" Condition="'%(FileName)' == 'clrjit' or '%(FileName)' == 'libclrjit'" />
      <_clrjit Include="@(RuntimeFiles)" Condition="'%(FileName)' == 'clrjit' or '%(FileName)' == 'libclrjit'" />
      <_crossTargetCrossgen Include="@(CoreCLRCrossTargetFiles)" Condition="'%(FileName)' == 'crossgen'" />
      <_crossgen Include="@(RuntimeFiles)" Condition="'%(FileName)' == 'crossgen'" />
    </ItemGroup>
    <ItemGroup Condition="'@(_crossTargetJit)' != '' and '@(_crossTargetCrossgen)' != ''">
      <CrossgenTool Include="@(_crossTargetCrossgen->ClearMetadata())"
                    JitPath="@(_crossTargetJit)"
                    DiaSymReader="$(_diaSymReaderPathIfExists)" />
    </ItemGroup>
    <ItemGroup Condition="'@(_crossTargetJit)' == '' and '@(_crossTargetCrossgen)' == ''">
      <CrossgenTool Include="@(_crossgen->ClearMetadata())"
                    JitPath="@(_clrjit)"
                    DiaSymReader="$(_diaSymReaderPathIfExists)" />
    </ItemGroup>
  </Target>
</Project>
